version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.0.0
  aws-ecr: circleci/aws-ecr@8.0.0

workflows:
  explore:
    jobs:
      - aws-ecr/build-and-push-image:
          dockerfile: Dockerfile
          executor: aws-ecr/default
          public-registry: false
          push-image: true
          repo: kelvin-hello-alpine
          skip-when-tags-exist: false
          profile-name: main
          tag: '${CIRCLE_SHA1}'
          region: 'us-east-1'
          # includes AWS_DEFAULT_REGION, AWS_REGISTRY_ID, AWS_ROLE_ARN
          context: aws-ecr-context
          pre-steps:
            - aws-cli/install
            - run:
                name: Assume role with OIDC web identity
                command: |
                  # use the OpenID Connect token to obtain AWS credentials
                  read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
                    $(aws sts assume-role-with-web-identity \
                     --role-arn ${AWS_ROLE_ARN} \
                     --role-session-name "CI-${CIRCLE_WORKFLOW_ID}-build-push-image" \
                     --web-identity-token $CIRCLE_OIDC_TOKEN \
                     --duration-seconds 3600 \
                     --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
                     --output text)
                  echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $BASH_ENV
                  echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $BASH_ENV
                  echo "export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> $BASH_ENV
            - run:
                name: Check identity
                command: |
                  # interact with AWS
                  aws sts get-caller-identity

